.artifacts:

aliases:
  - cache: &cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      # common
      - $HOME/.local
      - $HOME/.npm
      # darwin
      - $HOME/.homebrew
      - $HOME/Library/Caches/Homebrew
      - $HOME/Library/Caches/pip
      # linux
      - $HOME/.cache/Homebrew
      - $HOME/.cache/pip
      - $HOME/.linuxbrew


stages:
  - install
  - script
  - after


before_install_job:
  <<: *cache
  stage: install
  script:
    - ./.ci.sh before_install

install_job:
  <<: *cache
  dependencies:
    - before_install_job
  stage: install
  script:
    - ./.ci.sh install

before_script_job:
  <<: *cache
  dependencies:
    - install_job
  stage: script
  script:
    - ./.ci.sh before_script

script_job:
  <<: *cache
  dependencies:
    - before_script_job
  stage: script
  script:
    - ./.ci.sh script

after_success_job:
  <<: *cache
  dependencies:
    - script_job
  stage: after
  script:
    - ./.ci.sh after_success
  allow_failure: true
  when: on_success

after_failure_job:
  <<: *cache
  dependencies:
    - script_job
  stage: after
  script:
    - ./.ci.sh after_failure
  allow_failure: true
  when: on_failure

after_script_job:
  <<: *cache
  dependencies:
    - after_success_job
    - after_failure_job
  stage: after
  script:
    - ./.ci.sh after_script
  allow_failure: true
  when: always

cache_job:
  <<: *cache
  dependencies:
    - after_script_job
  stage: after
  script:
    - ./.ci.sh before_cache
  allow_failure: true
  when: on_success

aliases:
  - &step_restore_cache
    restore_cache:
      keys:
        - v1-{{ .Branch }}-<< parameters.p_cache_name >>-{{ checksum "~/week-number" }}
        - v1-master-<< parameters.p_cache_name >>-{{ checksum "~/week-number" }}

  - &step_save_cache
    save_cache:
      key: v1-{{ .Branch }}-<< parameters.p_cache_name >>-{{ checksum "~/week-number" }}
      paths:
        # common
        - ~/.local
        - ~/.npm
        # darwin
        - ~/.homebrew
        - ~/Library/Caches/Homebrew
        - ~/Library/Caches/pip
        # linux
        - ~/.cache/Homebrew
        - ~/.cache/pip
        - ~/.linuxbrew

  - job-main-linux-trusty-minimal: &job-main-linux-trusty-minimal
      p_ci_is_cron: "false"
      p_executor:
        name: docker
        p_image: circleci/buildpack-deps:trusty
      p_cache_name: linux-trusty-minimal
      p_install: minimal

  - job-main-linux-trusty-common: &job-main-linux-trusty-common
      p_ci_is_cron: "false"
      p_executor:
        name: docker
        p_image: circleci/buildpack-deps:trusty
      p_cache_name: linux-trusty-common
      p_install: common

  - job-main-linux-xenial-minimal: &job-main-linux-xenial-minimal
      p_ci_is_cron: "false"
      p_executor:
        name: docker
        p_image: circleci/buildpack-deps:xenial
      p_cache_name: linux-xenial-minimal
      p_install: minimal

  - job-main-linux-xenial-common: &job-main-linux-xenial-common
      p_ci_is_cron: "false"
      p_executor:
        name: docker
        p_image: circleci/buildpack-deps:xenial
      p_cache_name: linux-xenial-common
      p_install: common

  - job-main-macos-xcode101-dev: &job-main-macos-xcode101-dev
      p_ci_is_cron: "false"
      p_executor:
        name: macos
        p_xcode: "10.1.0"
      p_cache_name: macos-xcode10.1-dev
      p_install: dev

  - filter-main: &filter-main
      filters:
        branches:
          only:
            - master


executors:
  docker:
    parameters:
      p_image:
        type: string
    docker:
      - image: << parameters.p_image >>

  macos:
    parameters:
      p_xcode:
        type: string
    macos:
      xcode: << parameters.p_xcode >>


jobs:
  main: &job-main
    parameters:
      p_ci_is_cron:
        type: string
      p_executor:
        type: executor
      p_cache_name:
        type: string
      p_install:
        type: string
    executor: << parameters.p_executor >>
    steps:
      - run: echo "CI_IS_CRON=<< parameters.p_ci_is_cron >>" >> $BASH_ENV
      - run: echo "SF_CI_BREW_INSTALL=<< parameters.p_install >>" >> $BASH_ENV
      - run: echo "SF_LOG_BOOTSTRAP=true" >> $BASH_ENV
      - run: date +%v > ~/week-number
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - *step_restore_cache
      - run: ./.ci.sh before_install
      - run: ./.ci.sh install
      - run: ./.ci.sh before_script
      - run: ./.ci.sh script
      - run:
          when: on_fail
          command: ./.ci.sh after_failure
      - run:
          when: on_success
          command: ./.ci.sh after_success
      - run:
          when: always
          command: ./.ci.sh after_script
      - run: ./.ci.sh before_cache
      - *step_save_cache

  main-linux-trusty-minimal:
    <<: *job-main

  main-linux-trusty-common:
    <<: *job-main

  main-linux-xenial-minimal:
    <<: *job-main

  main-linux-xenial-common:
    <<: *job-main

  main-macos-xcode101-dev:
    <<: *job-main


workflows:
  version: 2.1

  main:
    jobs:
      - main-linux-trusty-minimal:
          <<: *filter-main
          <<: *job-main-linux-trusty-minimal
      - main-linux-trusty-common:
          <<: *filter-main
          <<: *job-main-linux-trusty-common
      - main-linux-xenial-minimal:
          <<: *filter-main
          <<: *job-main-linux-xenial-minimal
      - main-linux-xenial-common:
          <<: *filter-main
          <<: *job-main-linux-xenial-common
      # - main-macos-xcode101-dev:
      #     <<: *filter-main
      #     <<: *job-main-macos-xcode101-dev

  nightly:
    triggers:
      - schedule:
          <<: *filter-main
          cron: "0 0 * * *"
    jobs:
      - main-linux-trusty-minimal:
          <<: *job-main-linux-trusty-minimal
          p_ci_is_cron: "true"
      - main-linux-trusty-common:
          <<: *job-main-linux-trusty-common
          p_ci_is_cron: "true"
      - main-linux-xenial-minimal:
          <<: *job-main-linux-xenial-minimal
          p_ci_is_cron: "true"
      - main-linux-xenial-common:
          <<: *job-main-linux-xenial-common
          p_ci_is_cron: "true"
      # - main-macos-xcode101-dev:
      #     <<: *job-main-macos-xcode101-dev
      #     p_ci_is_cron: "true"
